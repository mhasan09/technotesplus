{"remainingRequest":"C:\\Users\\Mahabub\\PycharmProjects\\techNotes_final\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\Mahabub\\PycharmProjects\\techNotes_final\\frontend\\src\\components\\Share.vue?vue&type=style&index=0&id=df0b9742&lang=css","dependencies":[{"path":"C:\\Users\\Mahabub\\PycharmProjects\\techNotes_final\\frontend\\src\\components\\Share.vue","mtime":1629197632929},{"path":"C:\\Users\\Mahabub\\PycharmProjects\\techNotes_final\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1629211691588},{"path":"C:\\Users\\Mahabub\\PycharmProjects\\techNotes_final\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1629211696444},{"path":"C:\\Users\\Mahabub\\PycharmProjects\\techNotes_final\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1629211692812},{"path":"C:\\Users\\Mahabub\\PycharmProjects\\techNotes_final\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1629211688771},{"path":"C:\\Users\\Mahabub\\PycharmProjects\\techNotes_final\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1629211694599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouYnV0dG9uIGlzLXByaW1hcnl7DQogICAgZmxvYXQ6IHJpZ2h0Ow0KfQ0KLmdhcHsNCiAgICB3aWR0aDo1MCUNCn0NCg=="},{"version":3,"sources":["C:\\Users\\Mahabub\\PycharmProjects\\techNotes_final\\frontend\\src\\components\\Share.vue"],"names":[],"mappings":";AAmGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB;AACA,CAAC,CAAC,CAAC,CAAC;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ","file":"C:/Users/Mahabub/PycharmProjects/techNotes_final/frontend/src/components/Share.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <p class=\"mt-6\"></p>\r\n  <div class=\"columns is-mobile\">\r\n    <div class=\"column is-half is-offset-one-quarter\">\r\n      <article class=\"panel is-success\">\r\n        <p class=\"panel-tabs\"></p>\r\n        <div class=\"panel-block\">\r\n          <p class=\"control has-icons-left\">\r\n            <input class=\"input is-success\" type=\"text\" placeholder=\"Search\" />\r\n            <span class=\"icon is-left\">\r\n              <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <a\r\n          class=\"panel-block is-active\"\r\n          v-for=\"user in state.users\"\r\n          :key=\"user.id\"\r\n          :id=\"user.id\"\r\n        >\r\n          <span class=\"panel-icon\">\r\n            <i class=\"fas fa-user\" aria-hidden=\"true\"> </i>\r\n          </span>\r\n          <p class=\"mr-3\"></p>\r\n          <span>{{ user.username }}</span>\r\n            <p class=\"ml-4\"></p>\r\n          <button class=\"button is-primary\" style=\"margin-left:50%\">Share</button>\r\n        </a>\r\n      </article>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, onMounted } from \"vue\";\r\nimport axios from \"axios\";\r\nimport Note from \"../components/Note.vue\";\r\nimport { backend } from \"@/utils\";\r\nimport router from \"@/router\";\r\nimport { useRouter } from \"vue-router\";\r\nexport default {\r\n  name: \"Share\",\r\n  setup(props) {\r\n    const state = reactive({\r\n      users: [],\r\n    });\r\n\r\n    // this function will get all the user\r\n    const getUsers = async (_) => {\r\n      try {\r\n        const response = await axios.get(`${backend}/api/users/all`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.accessToken}`,\r\n          },\r\n        });\r\n        if (response.status === 200) {\r\n          state.users = response.data;\r\n        }\r\n      } catch (err) {\r\n        if (err.status === 500) {\r\n          //Throw error\r\n        } else {\r\n          try {\r\n            const refresh = await axios.post(`${backend}/api/token/refresh/`, {\r\n              refresh: localStorage.refreshToken,\r\n            });\r\n            localStorage.setItem(\"accessToken\", refresh.data.access);\r\n            const refreshResponse = await axios.get(\r\n              `${backend}/api/user/notes`,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${refresh.data.access}`,\r\n                },\r\n              }\r\n            );\r\n            if (refreshResponse.status === 200) {\r\n              state.users = refreshResponse.data;\r\n            }\r\n          } catch {\r\n            localStorage.removeItem(\"accessToken\");\r\n            localStorage.removeItem(\"refreshToken\");\r\n            await router.push({ name: \"Login\" });\r\n          }\r\n        }\r\n      }\r\n    };\r\n    onMounted(() => {\r\n      getUsers();\r\n    });\r\n\r\n\r\n    return {\r\n      state,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.button is-primary{\r\n    float: right;\r\n}\r\n.gap{\r\n    width:50%\r\n}\r\n</style>"]}]}