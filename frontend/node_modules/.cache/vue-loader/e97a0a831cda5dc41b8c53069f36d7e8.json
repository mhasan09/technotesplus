{"remainingRequest":"C:\\Users\\Mahabub\\PycharmProjects\\techNotes_final\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\Mahabub\\PycharmProjects\\techNotes_final\\frontend\\src\\components\\Note.vue?vue&type=style&index=0&id=34551322&lang=css","dependencies":[{"path":"C:\\Users\\Mahabub\\PycharmProjects\\techNotes_final\\frontend\\src\\components\\Note.vue","mtime":1629210517622},{"path":"C:\\Users\\Mahabub\\PycharmProjects\\techNotes_final\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1629211691588},{"path":"C:\\Users\\Mahabub\\PycharmProjects\\techNotes_final\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1629211696444},{"path":"C:\\Users\\Mahabub\\PycharmProjects\\techNotes_final\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1629211692812},{"path":"C:\\Users\\Mahabub\\PycharmProjects\\techNotes_final\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1629211688771},{"path":"C:\\Users\\Mahabub\\PycharmProjects\\techNotes_final\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1629211694599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouYWN0aW9uc3sNCiAgbWFyZ2luLWxlZnQ6NzclDQp9DQppew0KICAgcGFkZGluZy1sZWZ0OiAxZW07DQp9DQoNCg=="},{"version":3,"sources":["C:\\Users\\Mahabub\\PycharmProjects\\techNotes_final\\frontend\\src\\components\\Note.vue"],"names":[],"mappings":";AAiKA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB;AACA,CAAC;GACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACpB","file":"C:/Users/Mahabub/PycharmProjects/techNotes_final/frontend/src/components/Note.vue","sourceRoot":"","sourcesContent":["<template>\r\n <div class=\"columns is-mobile\">\r\n      <div class=\"column is-half is-offset-one-quarter\">\r\n        <div class=\"card\">\r\n          <div class=\"card-content\">\r\n            <div class=\"actions\">\r\n              <i class=\"fa fa-share-alt fa-lg\" @click=\"getNote\"></i>\r\n              <i class=\"fa fa-edit fa-lg\" @click=\"handleEditPanel\"></i>\r\n              <i class=\"fa fa-trash-alt fa-lg\" @click=\"handleDelete\"></i>\r\n            </div>\r\n            <!-- <p class=\"title\">{{ state.id }}</p> -->\r\n            <p class=\"title\" v-if=\"state.showNote\">{{ state.note }}</p>\r\n            <div v-if=\"state.editClicked\">\r\n              <textarea class=\"textarea is-medium is-primary\" type=\"text\" v-model=\"state.note\" placeholder=\"Primary input\"></textarea>\r\n              <p class=\"mt-4\"></p>\r\n              <div class=\"buttons\">\r\n                <button class=\"button is-primary\" @click=\"handleSave\">Save</button>\r\n                <button class=\"button is-danger\" @click=\"closeEditPanel\">Cancel</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive } from 'vue';\r\nimport axios from 'axios';\r\nimport {backend} from \"@/utils\";\r\nexport default {\r\n    props: {\r\n      id: {\r\n        type: Number,\r\n        required: true,\r\n      },\r\n      note: {\r\n        type: String,\r\n        required: true\r\n      }\r\n    },\r\n    setup(props, { emit }) {\r\n      const state = reactive({\r\n        id: props.id,\r\n        note: props.note,\r\n        editClicked: false,\r\n        showNote: true\r\n      });\r\n\r\n    // This function will save the edited data\r\n\r\n     const handleSave = async _ => {\r\n        try {\r\n          const response = await axios.put(`${backend}/api/note/update/${props.id}`, {\r\n            content: state.note\r\n          }, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.accessToken}`\r\n            }\r\n          });\r\n          if(response.status === 200) {\r\n            //Success\r\n            state.editClicked = false;\r\n            state.showNote = true\r\n            Toastify({\r\n              text: \"Note edited\",\r\n              duration: 3000,\r\n              destination: \"https://github.com/apvarun/toastify-js\",\r\n              newWindow: true,\r\n              close: true,\r\n              gravity: \"bottom\", // `top` or `bottom`\r\n              position: \"right\", // `left`, `center` or `right`\r\n              backgroundColor: \"linear-gradient(to right, #00b09b, #96c93d)\",\r\n              stopOnFocus: true, // Prevents dismissing of toast on hover\r\n              onClick: function(){} // Callback after click\r\n            }).showToast();\r\n          }\r\n        } catch(err) {\r\n          const refresh = await axios.post(`${backend}/api/token/refresh/`, { refresh: localStorage.refreshToken });\r\n          localStorage.setItem('accessToken', refresh.data.access);\r\n          const refreshResponse = await axios.put(`${backend}/api/note/update/${props.id}`, {\r\n            content: state.note\r\n          }, {\r\n            headers: {\r\n              Authorization: `Bearer ${refresh.data.access}`\r\n            }\r\n          });\r\n          if(refreshResponse.status === 200) {\r\n            //Success\r\n            state.editClicked = false;\r\n          }\r\n        } \r\n      }\r\n\r\n\r\n     const handleDelete = async _ => {\r\n        try {\r\n          const response = await axios.delete(`${backend}/api/note/delete/${props.id}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.accessToken}`\r\n            }\r\n          });\r\n          if(response.status === 200) {\r\n            emit('removeNote', { id: props.id })\r\n            Toastify({\r\n              text: \"Note deleted\",\r\n              duration: 3000,\r\n              destination: \"https://github.com/apvarun/toastify-js\",\r\n              newWindow: true,\r\n              close: true,\r\n              gravity: \"bottom\", // `top` or `bottom`\r\n              position: \"right\", // `left`, `center` or `right`\r\n              backgroundColor: \"linear-gradient(to right, #864ba2, #bf3a30)\",\r\n              stopOnFocus: true, // Prevents dismissing of toast on hover\r\n            }).showToast();\r\n          }\r\n        } catch(err) {\r\n          const refresh = await axios.post(`${backend}/api/token/refresh/`, { refresh: localStorage.refreshToken });\r\n          localStorage.setItem('accessToken', refresh.data.access);\r\n          const refreshResponse = await axios.delete(`${backend}/api/note/delete/${props.id}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${refresh.data.access}`\r\n            }\r\n          });\r\n          if(refreshResponse.status === 200) {\r\n            emit('removeNote', { id: props.id })\r\n          }\r\n        }\r\n      }\r\n\r\n      const handleEditPanel = () =>{\r\n        state.editClicked = true\r\n        state.showNote = false\r\n\r\n      }\r\n\r\n      const closeEditPanel = () =>{\r\n        state.editClicked = false\r\n      }\r\n\r\n\r\n      const getNote = async _ => {\r\n        const url = `${backend}/api/get_note/${props.id}`\r\n        console.log(url);\r\n        \r\n      }\r\n\r\n\r\n    return {\r\n        state,\r\n        handleDelete,\r\n        handleSave,\r\n        handleEditPanel,\r\n        closeEditPanel,\r\n        getNote\r\n      }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.actions{\r\n  margin-left:77%\r\n}\r\ni{\r\n   padding-left: 1em;\r\n}\r\n\r\n</style>"]}]}